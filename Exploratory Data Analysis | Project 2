-- Exploratory Data Analysis 

select *
From layoffs_staging2;

-- We will work with total_laid_off

select Max(total_laid_off), max(percentage_laid_off)
From layoffs_staging2;

select *
From layoffs_staging2
where percentage_laid_off = 1;

-- Sum of total_laid_off

select company, sum(total_laid_off)
From layoffs_staging2
Group by company
Order by 2 desc;

-- max date and min date
select max(`date`), min(`date`)
From layoffs_staging2;

-- look at industry

select industry, sum(total_laid_off)
From layoffs_staging2
Group by industry
Order by 2 desc;

-- look at countries

select country, sum(total_laid_off)
From layoffs_staging2
Group by country
Order by 2 desc;

-- lets check the date

select `date`, sum(total_laid_off)
From layoffs_staging2
Group by `date`
Order by 1 desc;

-- by year

select year(`date`), sum(total_laid_off)
From layoffs_staging2
Group by year(`date`)
Order by 1 desc;


-- by stage 

select stage, sum(total_laid_off)
From layoffs_staging2
Group by stage
Order by 1 desc;

select stage, sum(total_laid_off)
From layoffs_staging2
Group by stage
Order by 2 desc;

-- percentage_laid_off
select company, sum(percentage_laid_off)
From layoffs_staging2
Group by company
Order by 2 desc;

select company, avg(percentage_laid_off)
From layoffs_staging2
Group by company
Order by 2 desc;

-- by month ( rolling sum)

select substring(`date`, 1, 7) as `month`, sum(total_laid_off)
From layoffs_staging2
Where substring(`date`, 1, 7) is not null
Group by `month`
order by 1 asc;


-- total rolling by CTE

With rolling_total as
( select substring(`date`, 1, 7) as `month`, sum(total_laid_off) as total_off
From layoffs_staging2
Where substring(`date`, 1, 7) is not null
Group by `month`
order by 1 asc)
select `month`, total_off, sum(total_off) over(order by `month`) as rolling_total
from rolling_total;

-- look from company

select company, sum(total_laid_off)
From layoffs_staging2
Group by company
Order by 2 desc;

select company, year(`date`), sum(total_laid_off)
From layoffs_staging2
Group by company, year(`date`);
order by company asc;

select company, year(`date`), sum(total_laid_off)
From layoffs_staging2
Group by company, year(`date`)
order by 3 desc;

-- Using CTE

With company_year (company, years, total_laid_off) as
(select company, year(`date`), sum(total_laid_off)
From layoffs_staging2
Group by company, year(`date`))
select *, Dense_Rank() Over(partition by years order by total_laid_off desc) as Ranking
From company_year
where years is not null 
order by Ranking asc;

-- filter on ranking for top 5 in each year
With company_year (company, years, total_laid_off) as
(select company, year(`date`), sum(total_laid_off)
From layoffs_staging2
Group by company, year(`date`)), company_year_rank as
(select *, Dense_Rank() Over(partition by years order by total_laid_off desc) as Ranking
From company_year
where years is not null)
Select *
from company_year_rank
where ranking <= 5;
































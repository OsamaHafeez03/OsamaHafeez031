SQL Project - Data Cleaning

--https://www.kaggle.com/datasets/swaptr/layoffs-2022

   Select *
   From layoffs;


-- Remove duplicates
-- Standardized the Data
-- Null values or Blank value
-- Remove any columns.

-- the first thing we want to do is create a staging table. 

CREATE TABLE layoffs_staging 
LIKE layoffs;


select *
From layoffs_staging ;


insert layoffs_staging
Select * 
From layoffs;


- Identify duplicates


select *,
Row_Number() Over( partition by company, location, industry, 
total_laid_off, percentage_laid_off, `date`) As row_num
From layoffs_staging;


With duplicate_cte As
(select *,
Row_Number() Over( partition by company, location, industry, 
total_laid_off, percentage_laid_off, `date`) As row_num
From layoffs_staging)
Select *
From duplicate_cte
Where row_num > 1;


--- just look at Oda to confirm

select *
From layoffs_staging 
Where company =  'Oda';


-- As we check they are not duplicates so put eveything insert
   -- CTE to avoid the confusion
   
   With duplicate_cte As
(select *,
Row_Number() Over( partition by company, location, industry, 
total_laid_off, percentage_laid_off, `date`, stage, country,
funds_raised_millions) As row_num
From layoffs_staging)
Select *
From duplicate_cte
Where row_num > 1;

-- Again check Cazoo for confirmation
select *
From layoffs_staging 
Where company =  'Cazoo';


-- In my SQL We directly don't delete the columns.

 With duplicate_cte As
(select *,
Row_Number() Over( partition by company, location, industry, 
total_laid_off, percentage_laid_off, `date`, stage, country,
funds_raised_millions) As row_num
From layoffs_staging)
delete
From duplicate_cte
Where row_num > 1;














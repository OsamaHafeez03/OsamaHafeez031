SQL Project - Data Cleaning

--https://www.kaggle.com/datasets/swaptr/layoffs-2022

   Select *
   From layoffs;


-- Remove duplicates
-- Standardized the Data
-- Null values or Blank value
-- Remove any columns.

-- the first thing we want to do is create a staging table. 

CREATE TABLE layoffs_staging 
LIKE layoffs;


select *
From layoffs_staging ;


insert layoffs_staging
Select * 
From layoffs;


- Identify duplicates


select *,
Row_Number() Over( partition by company, location, industry, 
total_laid_off, percentage_laid_off, `date`) As row_num
From layoffs_staging;


With duplicate_cte As
(select *,
Row_Number() Over( partition by company, location, industry, 
total_laid_off, percentage_laid_off, `date`) As row_num
From layoffs_staging)
Select *
From duplicate_cte
Where row_num > 1;


--- just look at Oda to confirm

select *
From layoffs_staging 
Where company =  'Oda';


-- As we check they are not duplicates so put eveything insert
   -- CTE to avoid the confusion
   
   With duplicate_cte As
(select *,
Row_Number() Over( partition by company, location, industry, 
total_laid_off, percentage_laid_off, `date`, stage, country,
funds_raised_millions) As row_num
From layoffs_staging)
Select *
From duplicate_cte
Where row_num > 1;

-- Again check Cazoo for confirmation
select *
From layoffs_staging 
Where company =  'Cazoo';


-- In my SQL We directly don't delete the columns.

 With duplicate_cte As
(select *,
Row_Number() Over( partition by company, location, industry, 
total_laid_off, percentage_laid_off, `date`, stage, country,
funds_raised_millions) As row_num
From layoffs_staging)
delete
From duplicate_cte
Where row_num > 1;


 -- lets create a new table (layoffs_staging2) with extra column.
 
CREATE TABLE `layoffs_staging2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `row_num` INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


select *
From layoffs_staging2;
 
Insert into layoffs_staging2
select *,
Row_Number() Over( partition by company, location, industry, 
total_laid_off, percentage_laid_off, `date`, stage, country,
funds_raised_millions) As row_num
From layoffs_staging;

select *
From layoffs_staging2;


select *
From layoffs_staging2
Where row_num > 1;

-- Delete the duplicate

delete
From layoffs_staging2
Where row_num > 1;


-- Standardzing Data
 -- Removing space from company
 
 
 select company, Trim(company)
 From layoffs_staging2;


 Update layoffs_staging2
 set company = trim(company);


-- let check for industory
 
  select distinct industry
 From layoffs_staging2
 order by 1;

-- check for different values
 
  select *
 From layoffs_staging2
 Where industry like 'crypto%';


Update layoffs_staging2
 Set industry = 'crypto'
  Where industry like 'crypto%';


-- lets check the industry for crypto
  
    select distinct industry
 From layoffs_staging2;

-- lets look at location 
 
     select distinct location
 From layoffs_staging2;


-- lets look at country 
 
 select distinct country
 From layoffs_staging2
 order by 1;

-- lets correct united states.
 
  select distinct country, Trim( trailing '.' from country)
 From layoffs_staging2
 order by 1;
 
 update layoffs_staging2
 Set country = Trim( trailing '.' from country)
 Where country like 'United States%';


-- lets change the date formate

 select `date`
 From layoffs_staging2;


select `date`,
 str_to_date(`date`, '%m/%d/%Y')
 From layoffs_staging2;


Update layoffs_staging2
 set `date` = str_to_date(`date`, '%m/%d/%Y');

Alter table layoffs_staging2
 modify column `date` date;

 -- lets remove null value
 
 select *
 From layoffs_staging2
 Where total_laid_off is Null;


select *
 From layoffs_staging2
 Where total_laid_off is Null
 and percentage_laid_off is NULL;


 select distinct industry
 From layoffs_staging2;


 select *
 From layoffs_staging2
 Where industry is null
 or industry =  '';

-- Lets check Airbnb and populate it
 
 select *
 From layoffs_staging2
 Where company = 'Airbnb';

--- populate the industry 

Select *
 From layoffs_staging2 t1
 Join layoffs_staging2 t2
  On t1.company = t2.company
  Where (t1.industry is null or t1.industry = '')
  and t2.industry is not null;


 Select t1.industry, t2.industry
 From layoffs_staging2 t1 
 Join layoffs_staging2 t2
  On t1.company = t2.company
  Where (t1.industry is null or t1.industry = '')
  and t2.industry is not null;

 update layoffs_staging2 t1
 Join layoffs_staging2 t2
  On t1.company = t2.company
  Where (t1.industry is null or t1.industry = '')
  and t2.industry is not null;

-- AS we are getting blank value rather than null then we do 

 update layoffs_staging2 
  Set industry = null
  Where industry = '';

select *
 From layoffs_staging2
 Where company  like 'Bally%';

- Remove the columns
 
   select *
 From layoffs_staging2
 Where total_laid_off is Null
 and percentage_laid_off is NULL;


delete
 From layoffs_staging2
 Where total_laid_off is Null
 and percentage_laid_off is NULL;


 select *
 From layoffs_staging2;

 Alter table layoffs_staging2
 drop column row_num;















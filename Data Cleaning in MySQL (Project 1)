SQL Project - Data Cleaning

--https://www.kaggle.com/datasets/swaptr/layoffs-2022

Select *
From layoffs;


-- 1 Remove Duplicate
-- 2 Standardize the Data
-- 3 Null values 0r blanks
-- 4 Remove unnecessary columns


Create table layoffs_staging
Like layoffs;


Select *
From layoffs_staging;


Insert layoffs_staging
select *
From layoffs;


Select *,
row_number() Over( Partition by company, location, industry, total_laid_off, percentage_laid_off,
`date`, stage, country, funds_raised_millions) as row_num
From layoffs_staging;


With duplicate_cte AS
(Select *,
row_number() Over( Partition by company, location, industry, total_laid_off, percentage_laid_off,
`date`, stage, country, funds_raised_millions) as row_num
From layoffs_staging)
Select *
From duplicate_cte
Where row_num > 1;


Select *
From layoffs_staging
Where company = 'Casper';


With duplicate_cte AS
(Select *,
row_number() Over( Partition by company, location, industry, total_laid_off, percentage_laid_off,
`date`, stage, country, funds_raised_millions) as row_num
From layoffs_staging)
Delete
From duplicate_cte
Where row_num > 1;


REATE TABLE `layoffs_staging2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `row_num` int
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


Select *
From layoffs_staging2;


Insert into layoffs_staging2
Select *,
row_number() Over( Partition by company, location, industry, total_laid_off, percentage_laid_off,
`date`, stage, country, funds_raised_millions) as row_num
From layoffs_staging;


Select *
From layoffs_staging2
Where row_num > 1;


Delete
From layoffs_staging2
Where row_num >1;


Select *
From layoffs_staging2;


                                     -- Standardizing Data

Select company, Trim(company)
From layoffs_staging2;


Update layoffs_staging2
Set company = Trim(company);


Select distinct industry
From layoffs_staging2
Order by 1;


Select *
From layoffs_staging2
Where industry like 'Crypto%';


Select distinct industry
From layoffs_staging2
Order by 1;


Update layoffs_staging2
Set industry = 'Crypto'
Where industry like 'Crypto%';


Select distinct country
From layoffs_staging2
Order by 1;


Select distinct country, Trim(trailing '.' From country) 
From layoffs_staging2
Order by 1;


Update layoffs_staging2
Set country = Trim(trailing '.' From country) 
Where country like 'United States%';


Select `date`
From layoffs_staging2;


Update layoffs_staging2
Set `date` =  Str_to_date(`date`, '%m/%d/%Y');


ALTER TABLE layoffs_staging2
Modify column `date` Date;


                                         Null values 0r blanks


select *
From layoffs_staging2
Where total_laid_off is NUll
And percentage_laid_off is null;


select *
From layoffs_staging2
Where industry is null 
Or industry = '';


select *
From layoffs_staging2
Where company like 'Bally%';


update layoffs_staging2
set industry = null
Where industry = '';


select t1.industry, t2.industry
From layoffs_staging2 t1
Join layoffs_staging2 t2
 on t1.company = t2.company
Where t1.industry is null 
And (t2.industry is not null);


Update layoffs_staging2 t1
Join layoffs_staging2 t2
 on t1.company = t2.company
 Set  t1.industry  = t2.industry 
 Where t1.industry is null 
And (t2.industry is not null);


select *
From layoffs_staging2;


select *
From layoffs_staging2
Where total_laid_off is NUll
And percentage_laid_off is null;


                                                 Remove unnecessary columns


delete
From layoffs_staging2
Where total_laid_off is NUll
And percentage_laid_off is null;


alter table layoffs_staging2
drop column row_num;



